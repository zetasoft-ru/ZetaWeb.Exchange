#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// todo
	// адаптировать загрузку внутренних данных
	//ПредставлениеВерсии = зс_веб_ВыгрузкаЗагрузкаВнутреннихДанныхЗетаВебСервер.ПолучитьПредставлениеНомераВерсии(Запись.Версия);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьДоступность();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьРазделителиОбменаПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьРедактированиеПриИзменении(Элемент)
	
	ТекстВопроса = "Объект будет снят с поддержки. Автоматическое обновление объекта будет невозможно. Продолжить?";
	Кнопки = РежимДиалогаВопрос.ДаНет;
	ОтветПоУмолчанию = КодВозвратаДиалога.Нет;
	ПараметрыОповещения = Новый Структура;
	
	//асинхронное открытие включим в ЗВ 3.0
	//Оповещение = Новый ОписаниеОповещения("РазрешитьРедактирование", ЭтаФорма, ПараметрыОповещения);
	//
	//ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , ОтветПоУмолчанию);	
											
	Ответ = Вопрос(ТекстВопроса , Кнопки, 0, ОтветПоУмолчанию);
	РазрешитьРедактирование(Ответ, ПараметрыОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СравнитьСРелизом(Команда)
	
	//ДанныеРелиза = зс_веб_ВыгрузкаЗагрузкаВнутреннихДанныхЗетаВебСервер.ПолучитьДанныеОбъектаИзРелиза(Строка(Объект.Ссылка.УникальныйИдентификатор()), Объект.Версия);
	//
	//ДанныеОбъекта = зс_веб_ВыгрузкаЗагрузкаВнутреннихДанныхЗетаВебСервер.ПолучитьСериализованныеДанныеОбъекта(Объект.Ссылка);
	//
	//зс_веб_ВыгрузкаЗагрузкаВнутреннихДанныхЗетаВебКлиент.СравнитьОбъекты(ДанныеРелиза, ДанныеОбъекта, "Данные релиза", "Данные объекта");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторЗапросаОсновной(Команда)
	
	ОткрытьКонструкторЗапроса("ЗапросПолный");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторЗапросаИзменения(Команда)
	
	ОткрытьКонструкторЗапроса("ЗапросИзменения");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторЗапросаРазделителиПолный(Команда)
	
	ОткрытьКонструкторЗапроса("ЗапросРазделителиПолный");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторЗапросаРазделителиИзменения(Команда)
	
	ОткрытьКонструкторЗапроса("ЗапросРазделителиИзменения");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура УстановитьВидимостьДоступность()

	Если Запись.НаПоддержке Тогда
		
		ЭтаФорма.ТолькоПросмотр = Истина;
		
		РазрешитьРедактирование = Ложь;
		
		Элементы.РазрешитьРедактирование.Заголовок = "Включить возможность редактирования";
	
		Элементы.СравнитьСРелизом.Доступность = Ложь;
		
		Элементы.ОткрытьКонструкторЗапросаОсновной.Доступность = Ложь;
		Элементы.ОткрытьКонструкторЗапросаИзменения.Доступность = Ложь;
		
	Иначе
		
		ЭтаФорма.ТолькоПросмотр = Ложь;
		
		РазрешитьРедактирование = Истина;

		Элементы.РазрешитьРедактирование.Заголовок = "Редактирование разрешено";
		Элементы.РазрешитьРедактирование.Доступность = Ложь;
		
		Элементы.СравнитьСРелизом.Доступность = Истина;
	
		Элементы.ОткрытьКонструкторЗапросаОсновной.Доступность = Истина;
		Элементы.ОткрытьКонструкторЗапросаИзменения.Доступность = Истина;
		
	КонецЕсли;
	
	Элементы.СтраницаЗапросыРазделители.Доступность = Запись.ИспользоватьРазделителиОбмена;

КонецПроцедуры // УстановитьВидимостьДоступность()

&НаКлиенте
Процедура РазрешитьРедактирование(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		
		РазрешитьРедактирование = Ложь;
		
		Возврат;
		
	КонецЕсли;
	
	Запись.НаПоддержке = Ложь;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ОткрытьКонструкторЗапроса(Знач ИмяПоляЗапроса)
	
	#Если НЕ ТолстыйКлиентУправляемоеПриложение Тогда
		Если ВерсияПлатформыНиже835() Тогда
			Сообщить("Внимание! Данная версия клиента платформы 1С: Предприятие 
			| не поддерживает запуск конструктора запросов.");
			Возврат;
		КонецЕсли;
	#КонецЕсли
	
	Текст = Запись[ИмяПоляЗапроса];
	
	КодПрограммы = "
	|КонструкторЗапроса = Новый КонструкторЗапроса;
	|Если Не ПустаяСтрока(Текст) Тогда
	|		КонструкторЗапроса.Текст = Текст;
	|КонецЕсли;
	|";
	
	#Если ТолстыйКлиентУправляемоеПриложение Тогда
		Попытка
			
			КодПрограммы = КодПрограммы+ "
			|КонструкторЗапроса.АвтоДобавлениеПредставлений = ТекущиеДанные.АвтоДобавлениеПредставлений;
			|КонструкторЗапроса.РежимКомпоновкиДанных        = ТекущиеДанные.РежимКомпоновкиДанных;
			|
			|Если КонструкторЗапроса.ОткрытьМодально() Тогда
			|    ТекущиеДанные.Текст = КонструкторЗапроса.Текст;
			|    ПроверитьТекстЗапроса_ПолучитьПараметры_ОбновитьДанные();
			|КонецЕсли;
			|";
			Выполнить(КодПрограммы);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	#Иначе
		
		Попытка                                                                                                                 
			
			КодПрограммы = КодПрограммы+ "
			|КонструкторЗапроса.Показать(Новый ОписаниеОповещения(""ПослеРедактированияЗапроса"", ЭтаФорма, """ +  ИмяПоляЗапроса + """));
			|";
			Выполнить(КодПрограммы);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	#КонецЕсли

КонецПроцедуры // ОткрытьКонструкторЗапроса()

&НаКлиенте
Процедура ПослеРедактированияЗапроса(Текст, ИмяПоляЗапроса) Экспорт
	
	Если Не ПустаяСтрока(Текст) Тогда
		
		Запись[ИмяПоляЗапроса] = Текст;
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВерсияПлатформыНиже835()
    
    лРезультат = СравнениеСТекущейВерсией("8.3.5.1068");
    
    Возврат ?(лРезультат = -1, Истина, Ложь);    
	
КонецФункции

&НаСервереБезКонтекста
Функция СравнениеСТекущейВерсией(ВерсияДляСравнения)

	СисИнфо = Новый СистемнаяИнформация;
	ТекВерсия = СисИнфо.ВерсияПриложения;
	
	МассивТекущий = РазбитьСтрокуВМассивПодстрок(ТекВерсия);
	МассивДляСравнения = РазбитьСтрокуВМассивПодстрок(ВерсияДляСравнения);

	Для сч = 0 По 3 Цикл
		
		Если Число(МассивТекущий[сч]) = Число(МассивДляСравнения[сч]) Тогда
			пРезультат = 0; 
		ИначеЕсли Число(МассивТекущий[сч]) > Число(МассивДляСравнения[сч]) Тогда
			пРезультат = 1; 
			Прервать;
		ИначеЕсли Число(МассивТекущий[сч]) < Число(МассивДляСравнения[сч]) Тогда
			пРезультат = -1;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла; 
	
	Возврат пРезультат;

КонецФункции

&НаСервереБезКонтекста
Функция РазбитьСтрокуВМассивПодстрок(Строка, Разделитель = ".")

	Массив = Новый Массив;
	
	Тчк = Найти(Строка, Разделитель);
	
	Пока Тчк > 0 Цикл
		Массив.Добавить(Лев(Строка, Тчк-1));
		Строка = Сред(Строка, Тчк+1);
		Тчк = Найти(Строка, Разделитель);
	КонецЦикла;
		
	Если СтрДлина(Строка) > 0 Тогда
		Массив.Добавить(Строка);
	КонецЕсли;
	
	Возврат Массив;
	

КонецФункции

#КонецОбласти



