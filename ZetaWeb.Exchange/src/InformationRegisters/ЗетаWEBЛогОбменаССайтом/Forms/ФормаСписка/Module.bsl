
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АвтобоновлениеТекущегоЛога = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если АвтобоновлениеТекущегоЛога Тогда
		
		ПодключитьОбработчикОжидания("ОбновитьЛогПоТекущейСтрокеПериодическоеОбновление", 10, Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АвтобоновлениеТекущегоЛогаПриИзменении(Элемент)
	
	Если АвтобоновлениеТекущегоЛога Тогда
		
		ПодключитьОбработчикОжидания("ОбновитьЛогПоТекущейСтрокеПериодическоеОбновление", 10, Ложь);
		
	Иначе
		
		ОтключитьОбработчикОжидания("ОбновитьЛогПоТекущейСтрокеПериодическоеОбновление");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Список

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбновитьЛогПоТекущейСтрокеРазовоеОбновление", 0.2, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОчиститьЛогиОбмена(Команда)
	
	ТекстВопроса = "Очистить логи обмена с сайтом?";
	
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
	
		ОчиститьЛогОбменаНаСервере();
		
		Элементы.Список.Обновить();
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекущийЛог(Команда)
	
	ОбновитьЛогПоТекущейСтроке();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВНачалоТекущегоЛога(Команда)
	
	ПерейтиВТекущемЛоге(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВКонецТекущегоЛога(Команда)
	
	ПерейтиВТекущемЛоге();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеЛога(НастройкаОбмена, Период)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Настройка1C2WEB", НастройкаОбмена);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗетаWEBЛогОбменаССайтом.Лог КАК Лог
	|ИЗ
	|	РегистрСведений.ЗетаWEBЛогОбменаССайтом КАК ЗетаWEBЛогОбменаССайтом
	|ГДЕ
	|	ЗетаWEBЛогОбменаССайтом.Период = &Период
	|	И ЗетаWEBЛогОбменаССайтом.Настройка1C2WEB = &Настройка1C2WEB"
	;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат "";
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий();
		
		Возврат Выборка.Лог;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьЛогПоТекущейСтрокеПериодическоеОбновление()
	
	ОбновитьЛогПоТекущейСтроке();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЛогПоТекущейСтрокеРазовоеОбновление()
	
	ОбновитьЛогПоТекущейСтроке();
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьЛогПоТекущейСтроке()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ТекущийЛог = ПолучитьДанныеЛога(ТекущиеДанные.Настройка1C2WEB, ТекущиеДанные.Период);
		
		// без обработчика ожидания поле не успевает отрисоваться
		// возникает ошибка
		ПодключитьОбработчикОжидания("ПерейтиВТекущемЛогеВКонецОбработчикОжидания", 0.2, Истина);
		
	Иначе
		
		ТекущийЛог = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВТекущемЛогеВКонецОбработчикОжидания()
	
	ПерейтиВТекущемЛоге();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьЛогОбменаНаСервере()
	
	НаборЗаписей = РегистрыСведений.ЗетаWEBЛогОбменаССайтом.СоздатьНаборЗаписей();
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВТекущемЛоге(ВКонец = Истина)
	
	Если ВКонец Тогда
	
		ГраницаВыделения = Макс(СтрДлина(ТекущийЛог), 1);
		
	Иначе
		
		ГраницаВыделения = 1;
		
	КонецЕсли;
	
	// без обработчика ожидания поле не успевает отрисоваться
	// возникает ошибка
	// если и так не хватит времени, то ничего не будем делать
	Попытка
		
		Элементы.ТекущийЛог.УстановитьГраницыВыделения(ГраницаВыделения, ГраницаВыделения);
		
	Исключение
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти